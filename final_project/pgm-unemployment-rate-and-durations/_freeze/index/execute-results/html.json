{
  "hash": "7e2963690fc850e0fb1e0c9f7b2e9ace",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Causal Inference of Labor Market Inequality Using PGM: A multidimensional analysis of unemployment rate and durations\"\nauthor:\n    name: Mengjia Wei\n    email: mw1296@georgetown.edu\n    affiliation: Georgetown University\nkeywords:\n  - PGM\n  - Unemployment Rate\n  - Unemployment Durations\n  - Causal Inference\nabstract: |\n  This study investigates the causal relationships between age, occupation, race, and unemployment rates in the United States, applying probabilistic graphical modeling (PGM) to uncover latent dependency structures across demographic and industry variables. Using a PGM framework, we extend this approach to labor market data by constructing conditional dependence networks across two key dimensions: time (2015, 2024 and 2025) and group attributes (age, race, and industry). Specifically, the study examines recent college graduates (ages 22–24) relative to older individuals (25+), comparing their unemployment rates by major across 2024 and 2025. A second dimension of analysis focuses on industry-specific unemployment rate dynamics from 2015 to 2025, particularly in [retail], [arts], and [technology] sectors, and how these intersect with racial and age groups. In addition to rate-based measures, the study explores how unemployment duration has evolved between 2015 and 2025 across different occupations and age cohorts. This analysis seeks to identify whether certain groups—such as []—face longer or shorter periods of unemployment today compared to a decade ago, providing a more comprehensive view of labor market hardship. The model estimates the strength and direction of probabilistic dependencies using Bayesian structure learning algorithms, based on labor force aggregated data from BLS CPS datasets. The results indicate that recent college graduates in [] majors had a higher unemployment rate of [ ]% in 2025 H1 compared to [ ]% in 2024 H1. Additionally, the [retail], [arts], and [technology] industries experienced increased unemployment rates between 2015 and 2025, with respective changes of [ ], [ ], and [ ] percentage points. The findings also suggest that, consistent with earlier research, unemployment duration is negatively correlated with the unemployment rate by occupation, with industries exhibiting higher unemployment often associated with shorter average durations (Chien, Y., & Morris, P., 2016). The PGM framework reveals significant interactive effects between race and industry on unemployment, particularly among [e.g., Black or Hispanic workers] in the [e.g., retail or hospitality] sector. These findings contribute to the growing literature that leverages PGMs for social inference (e.g., Li et al., 2022), highlighting the model’s potential for uncovering structural labor inequalities over time and across population subgroups.\nplain-language-summary: |\n  TBD\nkey-points:\n  - TBD\n  - TBD\ndate: last-modified\nbibliography: references.bib\ncitation:\n  container-title: Georgetown Univeristy DSAN 5650 Journal\nnumber-sections: true\njupyter: python3\n---\n\n## Introduction\n\nThe interplay of demographic characteristics and labor market dynamics consistently reveals significant disparities in unemployment rates. Decades of research reveal a persistent relationship between race, gender, and unemployment, evident across diverse economic cycles. Though the Black unemployment rate fell to a historic low of 6.1% in 2019, it was still twice as high as the White unemployment rate of 3.0%, as @ValerieWilson2022 observed. These disparities are further magnified at the intersection of race and gender. For instance, Black men faced a 6.1% unemployment rate in February 2024, notably higher than Black women at 4.4%. Similarly, Hispanic women's unemployment rate increased to 5.0% in February 2024, while Hispanic men experienced a decrease to 4.0% (@Joseph2024). Native American men also experienced higher unemployment (10%) than Native American women (7%) in 2022. Industry-specific analyses similarly highlight divergent unemployment trends. The Leisure and Hospitality sector reported the highest unemployment rate at 6.0% in 2024, an increase from 5.5% in 2023. Similarly, Wholesale and Retail Trade experienced elevated unemployment, reaching 4.7% in October 2024, up from 4.0% in 2023. Conversely, Financial Activities maintained a significantly lower unemployment rate of 1.9% (@Oberlo2024). \n\nResearch from the U.S. Bureau of Labor Statistics consistently shows longer unemployment spells in sectors such as Manufacturing and Construction, while industries demanding specialized skills like Education and Health Services exhibit shorter durations. Study by @YiLiChienandPaulMorris reveals negative correlation between the unemployment rate and duration. Such variations in both the rate and duration of unemployment underscore complex interactions among race, gender, age, and industry.\n\n@TOIEducation2025 published that the labor market for recent college graduates has \"deteriorated noticeably\" in the first quarter of 2025. The unemployment rate for this cohort (ages 22-27) ranged from 5.5% to 7.1%, exceeding the overall national average of 4.1-4.2%, with Anthropology (9.4%), Physics (7.8%), and Computer Engineering (7.5%) showing among the highest rates. \n\n![Unemployment Rate of Recent College Graduates](images/unemployment_rate_recent_graduate.png){#fig-graduates}\n\nAlthough the Federal Open Market Committee (FOMC) reported a low overall unemployment rate for June 2025, recent data clearly indicate a noticeable uptick in the unemployment rate for the 22-27 age group since March, reaching 2021 levels and particularly affecting recent college graduates (@fig-graduates). \n\n::: {#01042be6 .cell execution_count=1}\n``` {.python .cell-code .hidden}\nimport warnings\nwarnings.filterwarnings('ignore')\n```\n:::\n\n\n::: {#0174be62 .cell execution_count=2}\n``` {.python .cell-code .hidden}\n# Data pre-processing\n# 1. Merge several unemployment statistics excel files downlaoded from BLS webiste\nimport pandas as pd\nimport os\n#os.getcwd()\n\ndef create_df_race(folder_path, demographic_type, id_vars, var_name, value_name):\n    merged_df = pd.DataFrame()\n    file_name = [f.removesuffix('.xlsx') for f in os.listdir(os.path.join(\"../data\", folder_path)) if f.endswith('.xlsx')]\n    for f in file_name:\n        file_path = os.path.join(\"../data\", folder_path, f + \".xlsx\")    \n        df = pd.read_excel(file_path)\n        rows = df[df.iloc[:,0]=='Year'].index[0]+2-1\n        df = pd.read_excel(file_path, skiprows=rows)\n        df_long = df.melt(id_vars=id_vars, var_name=var_name, value_name=value_name)\n        df_long[demographic_type] = f\n        merged_df = pd.concat([merged_df, df_long], ignore_index=True)\n    return merged_df\n\nfolder_path_list = [\"unemployment_rate_by_race\",\n             \"unemployment_rate_by_sex\",\n             \"unemployment_rate_by_industry\",\n             \"unemployment_rate_by_age\",\n            \"unemployment_rate_by_education_attainment\"]\n\ndemographic_type_list = ['Race',\n                    'Sex',\n                    'Industry',\n                    'Age',\n                    'Education_attainment']\n\nd_vars=\"Year\"\nvar_name=\"Month\"\nvalue_name=\"Unemployment_rate\"\n\ndf_dic = {}\nfor i in range(0, len(folder_path_list)):\n    folder_path = folder_path_list[i]\n    demographic_type=demographic_type_list[i]\n    merged_df = create_df_race(folder_path, demographic_type, \"Year\", \"Month\", \"Unemployment_rate\")\n    df_dic[demographic_type] = merged_df\n\n#list(df_dic.values())[0]\n```\n:::\n\n\n::: {#ce9c2f39 .cell execution_count=3}\n``` {.python .cell-code .hidden}\n# Data pre-processing\n# 2. Load and process monthly unemployment overall file\ndf_overall = pd.read_excel(\"../data/unemployment_rate_monthly_data.xlsx\", skiprows=11)\ndf_overall_long = df_overall.melt(id_vars=\"Year\", var_name=\"Month\", value_name=\"Unemployment_rate\")\n\n# 3. Load and process monthly unemployment duration by industry file\n```\n:::\n\n\n:::{#194060e7 .cell .markdown}\n## EDA\n### Unemployment Rates of Differenet Demographics\n:::\n\n::: {#1a58258c .cell execution_count=4}\n``` {.python .cell-code .hidden}\n# Plot the distributions of unemployment stats of different demographic categories \n\n## 1. Plot the umemployment rate distributions by gender, age, industry, education_unattainment\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ndef plot_hist(df_plot, demographic_type):\n    unique_categories = df_plot[demographic_type].unique()\n    num_unique_categories = len(unique_categories)\n    ncol = 3\n    nrow = np.int64(np.ceil(num_unique_categories/ncol))\n    fig, axes = plt.subplots(ncols=ncol, nrows=nrow, sharex=True, sharey=True, figsize = (16,nrow*5))\n    axes = axes.flatten()\n    min_rate = df_plot['Unemployment_rate'].min()\n    max_rate = df_plot['Unemployment_rate'].max()\n    num_bins = 20 \n    bins = np.linspace(min_rate, max_rate, num_bins + 1)\n    for i, category in enumerate(unique_categories):\n        ax = axes[i]\n        vals = df_plot[df_plot[demographic_type]==category]['Unemployment_rate']\n        ax.hist(vals, bins=bins, alpha=0.7, color='skyblue', edgecolor='black')\n        ax.axvline(np.mean(vals), color = 'black', linestyle = \"--\")\n        ax.set_title(category, fontsize=12)\n        ax.set_xlabel('Unemployment Rate', fontsize=10)\n        ax.set_ylabel('Count', fontsize=10)\n    plt.tight_layout()\n    plt.suptitle(f'Unemployment Rate Distribution by {demographic_type}', y=1.02, fontsize=18) \n    plt.show()\n\n# Show the graphs except for the last one in order to add the ariticle label to the last grapph\nfor i in range(0, len(df_dic.keys())-1):\n    df_plot = list(df_dic.values())[i]\n    demographic_type = list(df_dic.keys())[i]\n    print(f\"Unemployment Rate Distribution Histograms By {demographic_type}\")\n    plot_hist(df_plot, demographic_type)\n\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nUnemployment Rate Distribution Histograms By Race\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-5-output-2.png){}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nUnemployment Rate Distribution Histograms By Sex\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-5-output-4.png){}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nUnemployment Rate Distribution Histograms By Industry\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-5-output-6.png){}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\nUnemployment Rate Distribution Histograms By Age\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/cell-5-output-8.png){}\n:::\n:::\n\n\n::: {#cell-fig-histogram-unemployment-rate-demographics .cell execution_count=5}\n``` {.python .cell-code .hidden}\n## 2. Plot the overall umemployment rate \n## Display this graph separately from the preious chuck in order to add the aritcle label\ndf_plot = list(df_dic.values())[len(df_dic.keys())-1]\ndemographic_type = list(df_dic.keys())[len(df_dic.keys())-1]\nprint(f\"Unemployment Rate Distribution Histograms By {demographic_type}\")\nplot_hist(df_plot, demographic_type)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nUnemployment Rate Distribution Histograms By Education_attainment\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![Unemployment Rate Distributions By Demographics (2015-2025 statistics)](index_files/figure-html/fig-histogram-unemployment-rate-demographics-output-2.png){#fig-histogram-unemployment-rate-demographics fig-alt='Histogram plots of the unemployment rate distributins by Age, Sex, Race, Industry and Education Attainment using 2015-2025 BLS data'}\n:::\n:::\n\n\n:::{#5a8ec15b .cell .markdown}\nBLS data from 2015–2025 indicate that the Black or African American population experienced the highest average unemployment rate (7.5%), primarily within the 5–10% range. Gender differences are minimal, with both averaging around 5%, though rates are slightly higher for men. Among industries, Leisure and Hospitality recorded the highest unemployment (10%) with a long-tail distribution, followed by Agriculture (5–11%) and moderate variability. Construction and Mining/Oil & Gas exhibit similar but marginally lower patterns. The 22–24 age group stands out with significantly elevated unemployment—averaging 7% and predominantly above 5%—while other age groups display lower and more uniform rates. Financial Activities show the lowest and most stable unemployment, consistently under 5%. Individuals without a high school diploma face high and variable unemployment, averaging 7% with a long-tail skew. These patterns suggest that young adults (22–24), Black or African Americans without college degrees, and those employed in Leisure, Construction, or Mining sectors are disproportionately affected by higher unemployment. (@fig-histogram-unemployment-rate-demographics).\n:::\n\n::: {#cell-fig-histogram-unemployment-rate .cell execution_count=6}\n``` {.python .cell-code .hidden}\nmin_rate = df_overall_long['Unemployment_rate'].min()\nmax_rate = df_overall_long['Unemployment_rate'].max()\nnum_bins = 20\nbins = np.linspace(min_rate, max_rate, num_bins)\nfig, ax = plt.subplots(figsize = (8, 7))\nax.hist(df_overall_long['Unemployment_rate'], bins=bins, alpha=0.7, color='skyblue', edgecolor='black')\nax.axvline(np.mean(df_overall_long['Unemployment_rate']), color=\"black\", linestyle=\"--\")\nax.set_xlabel(\"Unemployment Rate\", fontsize=10)\nax.set_ylabel(\"Count\", fontsize=10)\nplt.tight_layout()\nplt.suptitle(\"Population Unemployment Rate\", y =1.02, fontsize=18)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![Overall Population Unemployment Rate Distributions (2015-2025 statistics)](index_files/figure-html/fig-histogram-unemployment-rate-output-1.png){#fig-histogram-unemployment-rate fig-alt='Histogram plot of the overall population unemployment rate distributins using 2015-2025 BLS data'}\n:::\n:::\n\n\n:::{#ebdaeb45 .cell .markdown}\nAccording to BLS data from 2015–2025, the overall population unemployment rate averaged slightly above 4%, with the majority of observations concentrated between 2% and 5% and exhibiting relatively low variability (@fig-histogram-unemployment-rate).\n\n## PGM\nWe posit that unemployment vulnerability is driven by structural inequalities within the labor market, particularly those rooted in demographic and industrial dimensions. Demographic disparities are represented by variables such as race, age, and educational attainment and industry; sex is excluded from the analysis due to prior findings indicating minimal impact on unemployment rates. Establishing a baseline unemployment level is a necessary step before assessing the marginal effects of these demographic and industrial factors.\n\n### Baseline unemployment rate distribution \nFigure 3 illustrates that the population unemployment rate is right-skewed, suggesting that the Log-Normal distribution is an appropriate model. We are going to estimate the parameters of a Log-Normal distribution from the population distribution data using MLE. ($\\sigma$, $\\text{loc}$, and $\\text{scale}$).\n:::\n\n::: {#cell-fig-histogram-lognorm .cell execution_count=7}\n``` {.python .cell-code .hidden}\n# Fit log-norm distribution using population unemployment rate data\nfrom scipy.stats import lognorm, kstest, skew \n\n## Get the unemployment_rate data that is not NA, convert to array\ndata_to_fit = df_overall_long[~np.isnan(np.array(df_overall_long['Unemployment_rate']))]['Unemployment_rate']\n\nsigma_fit, loc_fit, scale_fit = lognorm.fit(data_to_fit) # Fit log-normal distribution\n\n# Print the estimated parameters\nprint(f\"\\nFitted Log-Norm Distribution Parameters:\")\nprint(f\"  Shape parameter 'alpha'): {sigma_fit:.2f}\")\nprint(f\"  Location parameter (loc): {loc_fit:.2f}\")\nprint(f\"  Scale parameter (scale): {scale_fit:.2f}\")\n\n# Visualize the fit\nimport matplotlib.pyplot as plt\nfig, ax = plt.subplots(1, 1, figsize=(10, 9))\n## Histogram of the unemployment data\nax.hist(data_to_fit, bins=30, density=True, alpha=0.6, color='skyblue', edgecolor='black', label='Data Histogram')\n## Fitted log-norm pdf\nxmin, xmax = ax.get_xlim()\nx = np.linspace(xmin, xmax, 100)\np = lognorm.pdf(x, sigma_fit, loc=loc_fit, scale=scale_fit)\nax.plot(x, p, 'darkred', lw=2, label='Fitted Log-Normal PDF')\nax.set_xlabel('Unemployment Rate', fontsize=10)\nax.set_ylabel('Density', fontsize=10)\nax.legend()\nax.grid(True, linestyle='--', alpha=0.7)\nplt.tight_layout()\nplt.suptitle(\"Data Histogram vs. Fitted Log-Normal Distribution PDF\", y=1.02, fontsize=18)\nplt.show()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nFitted Log-Norm Distribution Parameters:\n  Shape parameter 'alpha'): 9.92\n  Location parameter (loc): 3.20\n  Scale parameter (scale): 0.03\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![Unmployment Rate Histogram vs. Fitted Log-Norm PDF](index_files/figure-html/fig-histogram-lognorm-output-2.png){#fig-histogram-lognorm fig-alt='Plot the histogram of unemployment rate data and overlay the Probability Density Function (PDF) of the fitted log-norm distribution.'}\n:::\n:::\n\n\n:::{#0a23cc3d .cell .markdown}\nBy overlaying the smooth PDF curve on top of original data's histogram, we can visualize that the Log-Normal distribution matches the distribution of the actual data. The peak of the PDF align with the peak of the histogram. The spread of the PDF roughly match the spread of the data, including the tail (@fig-histogram-lognorm).\nNow we need to use Kolmogorov-Smirnov Test to test Goodness-of-fit with the original data and estimated parameters, then examine the p value. \n:::\n\n::: {#52171dd2 .cell execution_count=8}\n``` {.python .cell-code .hidden}\n# KS goodness of fit test\nd_statistic, p_value = kstest(data_to_fit, lambda x: lognorm.cdf(x, sigma_fit, loc=loc_fit, scale=scale_fit)) \nprint(f\"\\nKolmogorov-Smirnov Test Results:\")\nprint(f\"  D-statistic: {d_statistic:.4f}\")\nprint(f\"  P-value: {p_value:.4f}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nKolmogorov-Smirnov Test Results:\n  D-statistic: 0.4592\n  P-value: 0.0000\n```\n:::\n:::\n\n\n:::{#3b43a4d8 .cell .markdown}\nWith $p$-value < 0.05, we can't reject the hypothesis that the distribution does not come from the Log-Normal distribution, suggesting Log-Normal is not a good fit for the data. Next, explore other right-skewed distributions - Gamma distribution or the Weibull distribution.\n:::\n\n::: {#cell-fig-histogram-gamma .cell execution_count=9}\n``` {.python .cell-code .hidden}\n# Fit gamma distribution using MLE\nfrom scipy.stats import gamma, skew, kstest\nalpha_fit, loc_fit, scale_fit = gamma.fit(data_to_fit) # fit gamma distribution\n\n# Print the estimated parameters\nprint(f\"\\nFitted Gamma Distribution Parameters:\")\nprint(f\"  Shape parameter 'alpha': {alpha_fit:.2f}\")\nprint(f\"  Location parameter 'loc': {loc_fit:.2f}\")\nprint(f\"  Scale parameter 'scale'): {scale_fit:.2f}\")\n\n# Visualize the fit\nfig, ax = plt.subplots(1, 1, figsize = (10, 8))\n## Histogram of the unemployment data\nax.hist(data_to_fit, bins = 20, density=True, color='skyblue', alpha= 0.7, edgecolor='black', label = 'Data Histogram')\nxmin, xmax = ax.get_xlim()\nx = np.linspace(xmin, xmax, 100)\n\n## Plot fitted gamma pdf\np = gamma.pdf(x, alpha_fit, loc=loc_fit, scale=scale_fit)\nax.plot(x, p, 'darkred', lw=2, label='Fitted Gamma PDF')\nax.set_xlabel('Unemployment Rate', fontsize=10)\nax.set_ylabel('Density', fontsize=10)\nax.legend()\nax.grid(True, linestyle='--', alpha=0.7)\nplt.tight_layout()\nplt.suptitle(\"Data Histogram vs. Fitted Gamma Distribution PDF\", y=1.02, fontsize=18)\nplt.show()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nFitted Gamma Distribution Parameters:\n  Shape parameter 'alpha': 0.45\n  Location parameter 'loc': 3.20\n  Scale parameter 'scale'): 1.36\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![Unmployment Rate Histogram vs. Fitted Gamma PDF](index_files/figure-html/fig-histogram-gamma-output-2.png){#fig-histogram-gamma fig-alt='Plot the histogram of unemployment rate data and overlay the Probability Density Function (PDF) of the fitted Gamma distribution.'}\n:::\n:::\n\n\n:::{#4a541145 .cell .markdown}\nAlthough visually the Gamma distribution matches the shape and spread of the actual data. (@fig-histogram-gamma), we need to\nuse KS Test to test Goodness-of-fit by examining the p value. \n:::\n\n::: {#e68ac08c .cell execution_count=10}\n``` {.python .cell-code .hidden}\n# Fit the gamma \nd_statistic, p_value = kstest(data_to_fit, lambda x: gamma.cdf(x, alpha_fit, loc=loc_fit, scale=scale_fit))\nprint(f\"\\nKolmogorov-Smirnov Test Results:\")\nprint(f\"  D-statistic: {d_statistic:.4f}\")\nprint(f\"  P-value: {p_value:.4f}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nKolmogorov-Smirnov Test Results:\n  D-statistic: 0.2699\n  P-value: 0.0000\n```\n:::\n:::\n\n\n:::{#11548827 .cell .markdown}\nAgain, with $p$-value < 0.05, we can not confidently say that the data comes from the Gamma distribution. Next, explore Weibull distribution.\n:::\n\n::: {#cell-fig-histogram-weibull .cell execution_count=11}\n``` {.python .cell-code .hidden}\n# Fit Weibull distribution using MLE\nfrom scipy.stats import weibull_min, skew, kstest\nfrom scipy.special import gamma as gamma_func # For Weibull mean calculation\nc_fit, loc_fit, scale_fit = weibull_min.fit(data_to_fit) # fit weibull distribution\n\n# Print the estimated parameters\n# print(f\"\\nFitted Weibull Distribution Parameters:\")\n# print(f\"  Shape parameter 'c' (k): {c_fit:.4f}\")\n# print(f\"  Location parameter (loc): {loc_fit:.4f}\")\n# print(f\"  Scale parameter (scale, lambda): {scale_fit:.4f}\")\n\n# Visualize the fit\nfig, ax = plt.subplots(1, 1, figsize = (10, 8))\n## Histogram of the unemployment data\nax.hist(data_to_fit, bins = 20, density=True, color='skyblue', alpha= 0.7, edgecolor='black', label = 'Data Histogram')\nxmin, xmax = ax.get_xlim()\nx = np.linspace(xmin, xmax, 100)\n\n## Plot fitted gamma pdf\np = weibull_min.pdf(x, c_fit, loc=loc_fit, scale=scale_fit)\nax.plot(x, p, 'darkred', lw=2, label='Fitted Weibull PDF')\nax.set_xlabel('Unemployment Rate', fontsize=10)\nax.set_ylabel('Density', fontsize=10)\nax.legend()\nax.grid(True, linestyle='--', alpha=0.7)\nplt.tight_layout()\nplt.suptitle(\"Data Histogram vs. Fitted Weibull Distribution PDF\", y=1.02, fontsize=18)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![Unmployment Rate Histogram vs. Fitted Weibull PDF](index_files/figure-html/fig-histogram-weibull-output-1.png){#fig-histogram-weibull fig-alt='Plot the histogram of unemployment rate data and overlay the Probability Density Function (PDF) of the fitted Weibull distribution.'}\n:::\n:::\n\n\n::: {#a0fde853 .cell execution_count=12}\n``` {.python .cell-code .hidden}\n# Fit the Weibull\nd_statistic, p_value = kstest(data_to_fit, lambda x: weibull_min.cdf(x, c_fit, loc=loc_fit, scale=scale_fit))\n# Calculate inferred mean\nfitted_mean = loc_fit + scale_fit * gamma_func(1 + 1/c_fit)\n# print(f\"\\nKolmogorov-Smirnov Test Results:\")\n# print(f\"  D-statistic: {d_statistic:.4f}\")\n# print(f\"  P-value: {p_value:.4f}\")\n```\n:::\n\n\n::: {#tbl-weibull-params .cell tbl-center='true' tbl-col='true' tbl-cap='Weibull Distribution and Fitness Statistics' execution_count=13}\n``` {.python .cell-code .hidden}\n# Print out the Weibull stats\nweibull_stats = {\n  \"parameters\": [\n    \"Shape (c)\",\n    \"Location (loc)\" ,\n    \"Scale\",\n    \"D_statistics\",\n    \"P-value\",\n    \"Fitted Mean\"\n  ],\n  \"values\": [\n     round(c_fit, 4),\n     round(loc_fit, 4),\n     round(scale_fit, 4),\n     round(d_statistic, 4),\n     round(p_value, 4),\n     round(fitted_mean, 2)\n  ]\n}\nweibull_stats_table = pd.DataFrame(weibull_stats)\ndisplay(weibull_stats_table.style.hide(axis=\"index\"))\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<style type=\"text/css\">\n</style>\n<table id=\"T_f28ab\">\n  <thead>\n    <tr>\n      <th id=\"T_f28ab_level0_col0\" class=\"col_heading level0 col0\" >parameters</th>\n      <th id=\"T_f28ab_level0_col1\" class=\"col_heading level0 col1\" >values</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td id=\"T_f28ab_row0_col0\" class=\"data row0 col0\" >Shape (c)</td>\n      <td id=\"T_f28ab_row0_col1\" class=\"data row0 col1\" >0.709300</td>\n    </tr>\n    <tr>\n      <td id=\"T_f28ab_row1_col0\" class=\"data row1 col0\" >Location (loc)</td>\n      <td id=\"T_f28ab_row1_col1\" class=\"data row1 col1\" >3.200000</td>\n    </tr>\n    <tr>\n      <td id=\"T_f28ab_row2_col0\" class=\"data row2 col0\" >Scale</td>\n      <td id=\"T_f28ab_row2_col1\" class=\"data row2 col1\" >0.920400</td>\n    </tr>\n    <tr>\n      <td id=\"T_f28ab_row3_col0\" class=\"data row3 col0\" >D_statistics</td>\n      <td id=\"T_f28ab_row3_col1\" class=\"data row3 col1\" >0.104700</td>\n    </tr>\n    <tr>\n      <td id=\"T_f28ab_row4_col0\" class=\"data row4 col0\" >P-value</td>\n      <td id=\"T_f28ab_row4_col1\" class=\"data row4 col1\" >0.117300</td>\n    </tr>\n    <tr>\n      <td id=\"T_f28ab_row5_col0\" class=\"data row5 col0\" >Fitted Mean</td>\n      <td id=\"T_f28ab_row5_col1\" class=\"data row5 col1\" >4.350000</td>\n    </tr>\n  </tbody>\n</table>\n```\n:::\n:::\n\n\n:::{#fdd7ff5c .cell .markdown}\nThe overlayed smooth PDF curve on top of original data's histogram @fig-histogram-weibull suggests that the Weibull distribution matches the distribution of the actual data. The results of the Weibull distribution, summarized in Table @tbl-weibull-params, including the shape, location, and scale parameters, along with the D-statistic, P-value, and fitted mean also proves Weibull distribution is a good fit, supported by a KS test p-value of 0.1173 (greater than 0.05). The estimated parameters (c=0.7093, loc=3.2000, scale=0.9204) align well with the spread of the data. Shape (c<1): Confirms the strong right-skewness of the data. Location (loc=3.2000): Indicates the distribution starts around 3.20, matching data's lower bound. Inferred Mean: The calculated mean of approximately 4.36 from these parameters is close but slightly higher than the data's actual mean of around 4, showing a good capture of central tendency.\n:::\n\n::: {#b5981acf .cell execution_count=14}\n``` {.python .cell-code .hidden}\n# Create variable \"baseline\" as baseline level of unemployment rate\n\n# Create variable - unemployment_vulnerability \n# unemployment_vulnerability = pm.math.invlogit(\n#         baseline # baseline unemployment rate\n#         + race_effect[race]\n#         + age_effect[age]\n#         + education_effect[education_attainment]\n#         + industry_effect[industry]\n#     )\n```\n:::\n\n\n::: {#f96a2ab5 .cell execution_count=15}\n``` {.python .cell-code .hidden}\nimport matplotlib.pyplot as plt\nimport numpy as np\neruptions = [1492, 1585, 1646, 1677, 1712, 1949, 1971, 2021]\n```\n:::\n\n\n:::{#0e135590 .cell .markdown}\n$$\np(x) = \\frac{e^{-\\lambda} \\lambda^{x}}{x !}\n$$ {#eq-poisson}\n\nwhere $\\lambda$ is the rate of eruptions per year. Using @eq-poisson, the probability of an eruption in the next $t$ years can be calculated.\n\n| Name                | Year |\n|---------------------|------|\n| Current             | 2021 |\n| Teneguía            | 1971 |\n| Nambroque           | 1949 |\n| El Charco           | 1712 |\n| Volcán San Antonio  | 1677 |\n| Volcán San Martin   | 1646 |\n| Tajuya near El Paso | 1585 |\n| Montaña Quemada     | 1492 |\n\n: Recent historic eruptions on La Palma {#tbl-history}\n\n@tbl-history summarises the eruptions recorded since the colonization of the islands by Europeans in the late 1400s.\n\n![Map of La Palma](images/la-palma-map.png){#fig-map}\n\nLa Palma is one of the west most islands in the Volcanic Archipelago of the Canary Islands (@fig-map).\n\n{{< embed notebooks/data-screening.qmd#fig-spatial-plot >}}\n\n@fig-spatial-plot shows the location of recent Earthquakes on La Palma.\n\nData and methods are discussed in @sec-data-methods.\n\nLet $x$ denote the number of eruptions in a year. Then, $x$ can be modeled by a Poisson distribution\n\n## Data & Methods {#sec-data-methods}\n\n## Conclusion\n\n## References {.unnumbered}\n\n::: {#refs}\n:::\n:::\n\n",
    "supporting": [
      "index_files/figure-html"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}